name: Deploy

on:
  workflow_dispatch:
    inputs:
      playbook_file:
        type: choice
        description: Deploy playbook
        options: 
        - droplet.yaml
        - postgresql.yaml
        - baseapi.yaml
        - web.yaml
        - nginx.yaml
      commit_hash:
        description: 'Deploy commit hash'
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout hash
      run: git checkout ${{ github.event.inputs.commit_hash }}

    - name: Generate SSL Files
      run: |
        echo "$SSL_CERTIFICATE_PRIVATE_KEY" >> /tmp/ssl-privkey.pem
        echo "$SSL_CERTIFICATE_FULL_CHAIN" >> /tmp/ssl-fullchain.pem
      env:
        SSL_CERTIFICATE_PRIVATE_KEY: ${{ secrets.SSL_CERTIFICATE_PRIVATE_KEY }}
        SSL_CERTIFICATE_FULL_CHAIN: ${{ secrets.SSL_CERTIFICATE_FULL_CHAIN }}

    - name: API Docker Build
      if: ${{ github.event.inputs.playbook_file == 'baseapi.yaml' }}
      uses: docker/build-push-action@v2
      with:
        file: api/Dockerfile
        context: api
        tags: baseapi:${{ github.event.inputs.commit_hash }}

    - name: Web Docker Build
      if: ${{ github.event.inputs.playbook_file == 'web.yaml' }}
      uses: docker/build-push-action@v2
      with:
        file: web/Dockerfile
        context: web
        tags: web:${{ github.event.inputs.commit_hash }}
        build-args: |
          NODE_ENV=production
          REACT_APP_TELEGRAM_BOT_NAME=TeleDriveAppBot
          REACT_APP_API_BASE_URL=https://api.teledrive.io
          REACT_APP_GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}

    - name: API Docker Save
      if: ${{ github.event.inputs.playbook_file == 'baseapi.yaml' }}
      run: docker save baseapi:${{ github.event.inputs.commit_hash }} > /tmp/baseapi-image.tar

    - name: Web Docker Save
      if: ${{ github.event.inputs.playbook_file == 'web.yaml' }}
      run: docker save web:${{ github.event.inputs.commit_hash }} > /tmp/web-image.tar

    - name: Run Playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        directory: deploy
        playbook: ${{ github.event.inputs.playbook_file }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        requirements: requirements.yaml
        options: |
          -e "web_image_path=/tmp/web-image.tar"
          -e "web_version=${{ github.event.inputs.commit_hash }}"
          -e "baseapi_image_path=/tmp/baseapi-image.tar"
          -e "baseapi_version=${{ github.event.inputs.commit_hash }}"
          -e "ssl_certificate_private_key_path=/tmp/ssl-privkey.pem"
          -e "ssl_certificate_full_chain_path=/tmp/ssl-fullchain.pem"
          -e "postgresql_password=${{ secrets.POSTGRESQL_PASSWORD }}"
          -e "django_secret_key=${{ secrets.DJANGO_SECRET_KEY }}"
          -e "jwt_secret_key=${{ secrets.JWT_SECRET_KEY }}"
          -e "file_token_key=${{ secrets.FILE_TOKEN_KEY }}"
          -e "telepram_api_id=${{ secrets.TELEGRAM_API_ID }}"
          -e "telepram_api_hash=${{ secrets.TELEGRAM_API_HASH }}"
          -e "telepram_bot_token=${{ secrets.TELEGRAM_BOT_TOKEN }}"
          -e "telepram_bot_session=${{ secrets.TELEGRAM_BOT_SESSION }}"
